"""Recreating Database

Revision ID: 3623d775bb49
Revises: 
Create Date: 2024-11-16 20:42:28.477499

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3623d775bb49'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('recruiter', 'interviewee', name='user_roles'), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', 'other', name='gender_types'), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('consent', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('recruiter_id', sa.Integer(), nullable=False),
    sa.Column('time_limit', sa.Integer(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recruiter_id'], ['users.id'], name=op.f('fk_assessments_recruiter_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assessments'))
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('info', 'warning', 'error', name='notification_types'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_table('password_resets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_password_resets_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password_resets')),
    sa.UniqueConstraint('token', name=op.f('uq_password_resets_token'))
    )
    op.create_table('invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('interviewee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'completed', 'expired', name='invitation_status'), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], name=op.f('fk_invitations_assessment_id')),
    sa.ForeignKeyConstraint(['interviewee_id'], ['users.id'], name=op.f('fk_invitations_interviewee_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_invitations'))
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('multiple_choice', 'subjective', 'coding', name='question_types'), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('choices', sa.JSON(), nullable=True),
    sa.Column('correct_answer', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], name=op.f('fk_questions_assessment_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_questions'))
    )
    op.create_table('submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('interviewee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('in_progress', 'submitted', 'graded', name='submission_status'), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], name=op.f('fk_submissions_assessment_id')),
    sa.ForeignKeyConstraint(['interviewee_id'], ['users.id'], name=op.f('fk_submissions_interviewee_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_submissions'))
    )
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name=op.f('fk_answers_question_id')),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], name=op.f('fk_answers_submission_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_answers'))
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('recruiter_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name=op.f('fk_feedback_question_id')),
    sa.ForeignKeyConstraint(['recruiter_id'], ['users.id'], name=op.f('fk_feedback_recruiter_id')),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], name=op.f('fk_feedback_submission_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feedback'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedback')
    op.drop_table('answers')
    op.drop_table('submissions')
    op.drop_table('questions')
    op.drop_table('invitations')
    op.drop_table('password_resets')
    op.drop_table('notifications')
    op.drop_table('assessments')
    op.drop_table('users')
    # ### end Alembic commands ###
